http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000 廖老师的git教程
1.初始化git仓库，使用git init 命令
2.添加文件到git仓库，分两步：
	·使用git add <file> 可以反复使用，添加多个文件
	·使用git commit 命令，完成。 添加-m可以输入说明（建议）
3.使用git status掌握工作区状态
4.若文件有被修改 使用git diff查看修改内容
5.HEAD指向的版本就是当前版本。使用命令git reset --hard commit_id
6.用git log查看提交历史。可以确定回退版本的commit_id.
7.用git reflog查看命令历史，以便确定会到未来的哪个版本。
8.我们创建的目录是工作区，gitadd是把工作区的文件转到暂存区（stage）里，此时因为没有确认，所以还没有进入库里。使用addcommit命令将暂存区的文件挪到master里
9.第一次修改 -> git add -> 第二次修改 -> git add -> git commit
10.每次修改，如果不add到暂存区，就不会commit
11.git checkout --file 是用版本库里的版本替换工作区的版本，无论工作区修改还是还原 都可以一键删除。
12.丢弃暂存区修改 先用 git reset HEAD file 让它回到工作区 然后再用上一步
13.下一个github desktop 关联电脑
14.要关联一个远程库 使用命令git remote add origin git@server-name:path/repo-name.git;
15.关联后，使用 git push -u origin master第一次推送master分支后所有内容
16.此后 每次本地提交后 使用git push origin master 推送最新修改。
17.克隆一个仓库 git clone git@server-name:path/repo-name.git
	也可以使用http地址 例如https://github.com/bluer906/gitskills.git
18.Git鼓励大量使用分支：
	查看分支:git branch
	创建分支:git branch <name>
	切换分支:git check out <name>
	创建+切换分支:git checkout -b <name>
	合并某分支到当前分支：git merge <name>
	删除分支：git branch -d <name>
19.当git无法自动合并时，必须先解决冲突。解决后再提交合并完成。
20.git log --graph 可以看到分支合并图。
21.合并分支时，如果使用fast forward模式，删除分支后，会丢掉分支信息。
22.使用git merge no-ff -m "" <branch name>融合分支
23.	master -> 稳定，用来发布新版本
	dev 主要任务分支 下面可以再有无数分支
	需要时 将dev下面的分支融合到一起 然后再发布到master分支。
24.git log -graph --pretty=oneline --abbrev-commit
25.开发一个新feature，最好新建一个分支。
	如果要丢弃一个没有被合并过的分支。可以通过git branch -D <name> 强行删除 
26.	git tag <name>新建一个标签。
	git tag -a <tagname> -m "" 指定标签信息
	git tag -s <tagname> -m "" 用pgp签名标签
	git tag 查看所有标签。
27.忽略文件 要编写.gitignore
28..gitignore文件本身要放进版本库里，并且可以对.gitignore做版本管理。
29.github可以配置别名
